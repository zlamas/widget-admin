{"version":3,"sources":["color-picker.js","copy.js","expand.js","header.js","index.js","multibutton.js","picker.js","popup.js","range.js","toggle.js","upload.js","video.js","widget-preview.js"],"names":[],"mappingslKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["let colorPicker = document.querySelector('.color-picker');\nlet colorArea, hueSlider, valueFields, colorMarker, colorField, colorAreaRect;\n\nfunction hexToRgb(hex) {\n    return hex\n        .slice(1)\n        .match(/.{2}/g)\n        .map((hex) => parseInt(hex, 16));\n}\n\nfunction rgbToHex(rgb) {\n    return `#${rgb\n        .map((val) => val.toString(16).padStart(2, '0'))\n        .join('')\n        .toUpperCase()\n    }`;\n}\n\nfunction rgbToHsv(red, green, blue) {\n    const max = Math.max(red, green, blue);\n    const min = Math.min(red, green, blue);\n    const d = max - min;\n    let hue = 0;\n    const saturation = max ? (d / max) : 0;\n    const value = max / 255;\n\n    if (d != 0) {\n        switch (max) {\n            case red: hue = ((green - blue) / d + 6) % 6; break;\n            case green: hue = (blue - red) / d + 2; break;\n            case blue: hue = (red - green) / d + 4;\n        }\n    }\n\n    return [Math.round(hue * 60), saturation, value];\n}\n\nfunction hsvToRgb(hue, saturation, value) {\n    hue /= 60;\n\n    const chroma = saturation * value;\n    const x = chroma * (1 - Math.abs(hue % 2 - 1));\n    const m = value - chroma;\n\n    const index = Math.floor(hue) % 6;\n    const red = [chroma, x, 0, 0, x, chroma][index];\n    const green = [x, chroma, chroma, x, 0, 0][index];\n    const blue = [0, 0, x, chroma, chroma, x][index];\n\n    return [\n        Math.round((red + m) * 255),\n        Math.round((green + m) * 255),\n        Math.round((blue + m) * 255)\n    ];\n}\n\nfunction getHsv() {\n    return ['--hue', '--sat', '--val']\n        .map((prop) => colorPicker.style.getPropertyValue(prop));\n}\n\nfunction initColorPicker() {\n    colorArea = colorPicker.querySelector('.color-picker__area');\n    hueSlider = colorPicker.querySelector('.color-picker__hue');\n    valueFields = colorPicker.querySelectorAll('.color-picker__field');\n    colorMarker = colorPicker.querySelector('.color-picker__marker');\n\n    colorPicker.addEventListener('picker-open', openColorPicker);\n    colorArea.addEventListener('pointerdown', pickerOnPointerDown);\n    document.addEventListener('pointerup', pickerOnPointerUp);\n    hueSlider.addEventListener('input', updateHue);\n}\n\nfunction updateColorAreaOffset() {\n    let boundingRect = colorArea.getBoundingClientRect();\n}\n\nfunction openColorPicker(target) {\n    colorField = event.target.closest('.color');\n\n    colorAreaRect = colorArea.getBoundingClientRect();\n    colorAreaRect.y += window.scrollY;\n\n    updateColorPicker(colorField.style.getPropertyValue('--color'));\n}\n\nfunction updateColorPicker(hex) {\n    let rgb;\n\n    if (hex) {\n        rgb = hexToRgb(hex);\n        let [hue, saturation, value] = rgbToHsv(...rgb);\n\n        hueSlider.value = hue;\n        updateHue();\n        setSaturationValue(saturation, value);\n    } else {\n        let hsv = getHsv();\n        rgb = hsvToRgb(...hsv);\n        hex = rgbToHex(rgb);\n        colorField.style.setProperty('--color', hex);\n    }\n\n    components = [hex, ...rgb];\n    valueFields.forEach((field, i) => field.value = components[i]);\n    colorField.querySelector('.color__hex').textContent = hex;\n}\n\nfunction updateHue() {\n    colorPicker.style.setProperty('--hue', hueSlider.value);\n    updateColorPicker();\n}\n\nfunction setSaturationValue(saturation, value) {\n    colorPicker.style.setProperty('--sat', saturation);\n    colorPicker.style.setProperty('--val', value);\n    updateColorPicker();\n}\n\nfunction updateSaturationValue(event) {\n    if (event.buttons & 1) {\n        let saturation = (event.pageX - colorAreaRect.x) / colorAreaRect.width;\n        let value = 1 - (event.pageY - colorAreaRect.y) / colorAreaRect.height;\n        saturation = Math.max(0, Math.min(saturation, 1));\n        value = Math.max(0, Math.min(value, 1));\n        setSaturationValue(saturation, value);\n    }\n}\n\nfunction pickerOnPointerDown(event) {\n    document.addEventListener('pointermove', updateSaturationValue);\n    updateSaturationValue(event);\n}\n\nfunction pickerOnPointerUp(event) {\n    document.removeEventListener('pointermove', updateSaturationValue);\n\n    let target = event.target;\n\n    if (target.closest('.color__icon')\n    && !target.closest('.picker-open')) {\n        let hex = target.dataset.color;\n        let colorField = target.closest('.color');\n        let colorHex = colorField.querySelector('.color__hex');\n        colorField.style.setProperty('--color', hex);\n        colorHex.textContent = hex;\n    }\n}\n\nif (colorPicker) {\n    initColorPicker();\n}\n\ndocument.querySelectorAll('.color__icon')\n    .forEach((el) => {\n        if (el.classList.contains('color--current')) {\n            el.closest('.color')\n                .style.setProperty('--color', el.dataset.color);\n        } else {\n            el.style.background = el.dataset.color;\n        }\n    });\n","document.addEventListener('click', (event) => {\n    if (event.target.classList.contains('copyable__button')) {\n        let copyable = event.target.closest('.copyable');\n        let textArea = copyable.querySelector('.input');\n        navigator.clipboard\n            .writeText(copyable.textContent)\n            .then(() => copyable.classList.add('copyable--success'))\n            .catch(console.error);\n    }\n});\n","document.querySelectorAll('.expand')\n    .forEach((el) => {\n        let toCollapse = document.querySelectorAll(el.dataset.collapse);\n        el.addEventListener('click', (event) => {\n            el.classList.toggle('expand--expanded');\n            toCollapse.forEach((el) => el.classList.toggle('hidden'));\n        });\n    });\n","let sidebar = document.querySelector('.sidebar');\n\ndocument.addEventListener('click', (event) => {\n    if (event.target.classList.contains('header__burger')) {\n        sidebar.classList.add('sidebar--open');\n    } else if (event.target.classList.contains('sidebar__close')) {\n        sidebar.classList.remove('sidebar--open');\n    }\n});\n","let widgetList = document.querySelector('.widget-list--types');\nlet createWidget = document.querySelector('#create-widget');\nlet multiList = document.querySelector('#multi-list');\n\nif (widgetList) {\n    widgetList.addEventListener('click', (event) => {\n        let item = event.target.closest('.widget-list__type');\n        if (item) {\n            createWidget.classList.add('hidden');\n            multiList.classList.remove('hidden');\n\n            let selectedItem = widgetList.querySelector('.widget-list__type--selected');\n\n            if (selectedItem) {\n                selectedItem.classList.remove('widget-list__type--selected');\n            }\n\n            if (item != selectedItem) {\n                item.classList.add('widget-list__type--selected');\n            }\n        }\n    });\n}\n","let multiPresetList = document.querySelector('.multi-presets--scrollable');\nlet variantList = document.querySelector('.variant-list');\nlet iconPicker = document.querySelector('.icon-picker');\nlet uploadPicker = document.querySelector('.upload-picker');\nlet addVariant = document.querySelector('.add-variant');\nlet multiVariantOptions = document.querySelector('#multi-variant-options');\n\nif (multiPresetList) {\n    multiPresetList.addEventListener('click', (event) => {\n        let preset = event.target.closest('.multi-preset');\n        if (preset) {\n            multiPresetList.querySelector('.multi-preset--selected')\n                .classList.remove('multi-preset--selected');\n            preset.classList.add('multi-preset--selected');\n        }\n    });\n}\n\nif (variantList) {\n    variantList.addEventListener('click', (event) => {\n        if (event.target.closest('.icon-button--nav')) {\n            let selectedItem = variantList.querySelector('.variant-list__item--selected');\n            let itemToSelect;\n\n            if (event.target.closest('.icon-button--up')) {\n                itemToSelect = selectedItem.previousElementSibling;\n            } else if (event.target.closest('.icon-button--down')) {\n                itemToSelect = selectedItem.nextElementSibling;\n            }\n\n            if (itemToSelect) {\n                selectedItem.classList.remove('variant-list__item--selected');\n                itemToSelect.classList.add('variant-list__item--selected');\n            }\n        }\n    });\n}\n\nif (iconPicker) {\n    iconPicker.addEventListener('click', (event) => {\n        if (event.target.closest('.icon-picker__icon')) {\n            iconPicker.style.visibility = '';\n            event.stopPropagation();\n        }\n    });\n}\n\nif (uploadPicker) {\n    uploadPicker.addEventListener('click', (event) => {\n        if (event.target.closest('.icon-button--close')\n        ||  event.target.closest('.button')) {\n            uploadPicker.style.visibility = '';\n            event.stopPropagation();\n        }\n    });\n}\n\nif (multiVariantOptions) {\n    document.addEventListener('click', (event) => {\n        if (event.target.closest('.add-variant')\n        ||  event.target.closest('.edit-variant')) {\n            multiVariantOptions.classList.remove('hidden');\n        }\n    });\n}\n","document.querySelectorAll('.picker-open')\n    .forEach((el) => {\n        let picker = document.querySelector(el.dataset.picker);\n\n        el.addEventListener('click', () => {\n            el.append(picker);\n\n            let pickerOffset = picker.getBoundingClientRect();\n            let overflow = window.innerWidth - pickerOffset.right;\n\n            if (overflow < 0) {\n                picker.style.setProperty('--offset', `${overflow}px`);\n            }\n\n            picker.style.visibility = 'visible';\n            picker.dispatchEvent(new Event('picker-open'));\n        });\n    });\n\ndocument.querySelectorAll('.picker')\n    .forEach((picker) => {\n        let isDragging = false;\n\n        function onPointerMove() {\n            isDragging = true;\n        }\n\n        document.addEventListener('pointerup', (event) => {\n            document.removeEventListener('pointermove', onPointerMove);\n\n            if (!isDragging && !picker.contains(event.target)) {\n                picker.style.visibility = '';\n            } else {\n                isDragging = false;\n            }\n        });\n\n        picker.addEventListener('pointerdown', (event) => {\n            document.addEventListener('pointermove', onPointerMove);\n        });\n    });\n","let popup = document.querySelector('.popup');\n\ndocument.addEventListener('click', (event) => {\n    if (event.target.classList.contains('help')) {\n        popup.classList.add('popup--open');\n    } else if (event.target.classList.contains('popup__close')) {\n        popup.classList.remove('popup--open');\n    }\n});\n","function updateRange(range) {\n    let input = range.querySelector('.range__input');\n    let tooltip = range.querySelector('.tooltip');\n    let valueDisplay = range.querySelector('.range__percent');\n    let percent =\n        (input.value - input.min) /\n        (input.max - input.min)\n        * 100;\n\n    range.style.setProperty('--range-progress', `${percent}%`);\n    if (tooltip) {\n        tooltip.textContent = input.valueAsNumber.toFixed(2);\n    }\n    if (valueDisplay) {\n        valueDisplay.textContent = `${Math.round(percent)}%`;\n    }\n}\n\ndocument.querySelectorAll('.range')\n    .forEach((range) => {\n        updateRange(range);\n        range.addEventListener('input', () => updateRange(range));\n    });\n","document.querySelectorAll('.radio-toggle')\n    .forEach((el) => {\n        let radios = el.querySelectorAll('.option__input');\n        el.addEventListener('change', (event) => {\n            if (event.target.type != 'radio') return;\n            radios.forEach((radio) => {\n                let isChecked = (event.target == radio);\n                let toToggle = document.querySelectorAll(radio.dataset.toggle);\n                toToggle.forEach((el) => el.classList.toggle('hidden', !isChecked));\n            });\n        });\n    });\n","let uploadPreviews = document.querySelectorAll('.upload__preview');\n\ndocument.addEventListener('input', (event) => {\n    let uploadPreview = event.target.closest('.upload__preview');\n    if (uploadPreview) {\n        uploadPreview.classList.remove('hidden');\n    }\n});\n\ndocument.addEventListener('click', (event) => {\n    let uploadPreview = event.target.closest('.upload__preview');\n    if (uploadPreview && event.target.closest('.delete')) {\n        uploadPreview.classList.add('hidden');\n    }\n});\n","let videoUploadArea = document.querySelector('.upload-video');\nlet videoContent = document.querySelector('.video');\n\nif (videoContent) {\n    document.addEventListener('input', (event) => {\n        if (event.target.id == 'upload-video') {\n            videoUploadArea.classList.add('hidden');\n            videoContent.classList.remove('hidden');\n        }\n    });\n\n    document.addEventListener('click', (event) => {\n        if (event.target.closest('.delete')\n        && videoContent.contains(event.target)) {\n            videoContent.classList.add('hidden');\n            videoUploadArea.classList.remove('hidden');\n        }\n    });\n}\n","let preview = document.querySelector('.widget-preview__block');\nlet previewSliderX, previewSliderY;\n\nfunction updatePreview() {\n    let valueX = previewSliderX.value;\n    let valueY = previewSliderY.value;\n    preview.style.setProperty('--widget-x', `${valueX}%`);\n    preview.style.setProperty('--widget-y', `${valueY}%`);\n}\n\nfunction initPreview() {\n    [previewSliderX, previewSliderY] = preview.querySelectorAll(`\n        .widget-preview__slider--horizontal .range__input,\n        .widget-preview__slider--vertical .range__input\n    `);\n    preview.addEventListener('input', updatePreview);\n    updatePreview();\n}\n\nif (preview) {\n    initPreview();\n}\n"]}